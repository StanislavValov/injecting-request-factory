<?xml version="1.0" encoding="utf-8" ?>
<project name="InjectingRequestFactory" default="build" basedir=".">
  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value=""/>

  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="/Users/mgenov/Development/gwt-2.4.0-rc1"/>

  <!-- Configure build path -->
  <property name="lib" value="lib"/>
  <property name="build.dir" value="build"/>

  <path id="project.class.path">
    <pathelement location="${build.dir}/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <pathelement location="${gwt.sdk}/gwt-dev.jar"/>
    <pathelement location="${gwt.sdk}/gwt-servlet-deps.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <pathelement location="${lib}"/>

    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="init" description="Copy libs to WEB-INF/lib">
    <delete dir="${build.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/WEB-INF/lib"/>
    <copy todir="${build.dir}/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar"/>
    <copy todir="${build.dir}/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar"/>
    <copy todir="${build.dir}/WEB-INF/lib">
      <fileset dir="${lib}" includes="**/*.jar"/>
    </copy>

    <!-- Copy web configuration and content -->
    <copy todir="${build.dir}">
      <fileset dir="war" includes="**/*.*"/>
    </copy>

  </target>

  <target name="javac" depends="init" description="Compile java source to bytecode">
    <mkdir dir="${build.dir}/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
           destdir="${build.dir}/WEB-INF/classes"
           source="1.6" target="1.6" nowarn="true"
           debug="true" debuglevel="lines,vars,source" includeantruntime="true">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="${build.dir}/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
      <fileset dir="src" excludes="**/*.xml"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <arg line="-war"/>
      <arg value="${build.dir}"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="com.clouway.requestfactory.app.client.MySampleApplication"/>
    </java>
  </target>

  <target name="devmode" depends="javac" description="Run development mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="MySampleApplication.html"/>
      <arg line="-war"/>
      <arg value="${build.dir}"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="com.clouway.requestfactory.app.MySampleApplication"/>
    </java>
  </target>

  <target name="eclipse.generate" depends="init" description="Generate eclipse project">
    <java failonerror="true" fork="true" classname="com.google.gwt.user.tools.WebAppCreator">
      <classpath>
        <path refid="project.class.path"/>
      </classpath>
      <arg value="-XonlyEclipse"/>
      <arg value="-ignore"/>
      <arg value="com.google.gwt.sample.dynatablerf.DynaTableRf"/>
    </java>
  </target>

  <!--
  Test targets suppressed because -junit argument was not specified when running webAppCreator.

    <target name="javac.tests" depends="javac" description="Compiles test code">
      <javac srcdir="test" includes="**" encoding="utf-8"
        source="1.5" target="1.5" nowarn="true"
        destdir="war/WEB-INF/classes"
        debug="true" debuglevel="lines,vars,source">
        <classpath location="path_to_the_junit_jar"/>
        <classpath refid="project.class.path"/>
      </javac>
    </target>

    <target name="test.dev" depends="javac.tests" description="Run development mode tests">
      <mkdir dir="reports/htmlunit.dev" />
      <junit fork="yes" printsummary="yes" haltonfailure="yes">
        <jvmarg line="-Xmx256m" />
        <sysproperty key="gwt.args" value="-standardsMode -logLevel WARN" />
        <sysproperty key="java.awt.headless" value="true" />
        <classpath>
          <pathelement location="src" />
          <pathelement location="test" />
          <path refid="project.class.path" />
          <pathelement location="../../validation-api-1.0.0.GA.jar" />
          <pathelement location="../../validation-api-1.0.0.GA-sources.jar" />
          <pathelement location="path_to_the_junit_jar" />
        </classpath>
        <batchtest todir="reports/htmlunit.dev" >
          <fileset dir="test" >
            <include name="**/*Test.java" />
          </fileset>
        </batchtest>
        <formatter type="plain" />
        <formatter type="xml" />
      </junit>
    </target>

    <target name="test.prod" depends="javac.tests" description="Run production mode tests">
      <mkdir dir="reports/htmlunit.prod" />
      <junit fork="yes" printsummary="yes" haltonfailure="yes">
        <jvmarg line="-Xmx256m" />
        <sysproperty key="gwt.args" value="-prod -standardsMode -logLevel WARN -standardsMode -out www-test" />
        <sysproperty key="java.awt.headless" value="true" />
        <classpath>
          <pathelement location="src" />
          <pathelement location="test" />
          <path refid="project.class.path" />
          <pathelement location="../../validation-api-1.0.0.GA.jar" />
          <pathelement location="../../validation-api-1.0.0.GA-sources.jar" />
          <pathelement location="path_to_the_junit_jar" />
        </classpath>
        <batchtest todir="reports/htmlunit.prod" >
          <fileset dir="test" >
            <include name="**/*Test.java" />
          </fileset>
        </batchtest>
        <formatter type="plain" />
        <formatter type="xml" />
      </junit>
    </target>

    <target name="test" description="Run development and production mode tests">
      <antcall target="test.dev" />
      <antcall target="test.prod" />
    </target>
  -->

  <target name="build" depends="gwtc" description="Build this project"/>

  <target name="clean" description="Cleans this project">
    <delete dir="${build.dir}" failonerror="false"/>
  </target>

</project>
